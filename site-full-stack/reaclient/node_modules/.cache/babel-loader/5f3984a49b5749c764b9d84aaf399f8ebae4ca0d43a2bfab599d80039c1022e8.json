{"ast":null,"code":"import axios from\"axios\";// La methode qui corresondre avec la route post\n// ça retourne une promesse\n// Pour tester la requete, on pare dans composants\n// export function getPosts() {\n//     return new Promise(resolve => {\n//         axios.get(\"http://localhost:4000/\")\n//         .then(console.log)\n//         .catch(console.error)\n//     })\n// }\nexport function getPosts(){return new Promise(resolve=>{// .then(res => res.status === 200 && res.data) equivaut à\n// on verifie le statut et on retourne le resultat\n// On resolve la fonction qui retourne la promesse\naxios.get(\"http://localhost:4000/\").then(res=>res.status===200&&res.data).then(resolve).catch(console.error);});}// export function getPosts() {\n//     return new Promise(resolve => {\n//         axios.get(\"/posts\")\n//         .then(res => res.status === 200 && res.data)\n//         .then(res => res.status === 200 && res.data)\n//         .then(resolve)\n//         .catch(console.error)\n//     })\n// }\nexport function insertPost(body){return new Promise(resolve=>{axios.post(\"http://localhost:4000/insert\",body).then(res=>res.status===200&&res.data).then(resolve).catch(console.error);});}// export function insertPost(body) {\n//     return new Promise(resolve => {\n//         axios.post(\"/posts/insert\", body)\n//         .then(res => res.status === 200 && res.data)\n//         .then(resolve)\n//         .catch(console.error)\n//     })\n// }","map":{"version":3,"names":["axios","getPosts","Promise","resolve","get","then","res","status","data","catch","console","error","insertPost","body","post"],"sources":["C:/Users/HP/Documents/Apprend_programmation_dossier/React_full_stack_site/site-full-stack/reaclient/src/service/index.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\n// La methode qui corresondre avec la route post\r\n// ça retourne une promesse\r\n// Pour tester la requete, on pare dans composants\r\n// export function getPosts() {\r\n//     return new Promise(resolve => {\r\n//         axios.get(\"http://localhost:4000/\")\r\n//         .then(console.log)\r\n//         .catch(console.error)\r\n//     })\r\n// }\r\nexport function getPosts() {\r\n    return new Promise(resolve => {\r\n        // .then(res => res.status === 200 && res.data) equivaut à\r\n        // on verifie le statut et on retourne le resultat\r\n        // On resolve la fonction qui retourne la promesse\r\n        axios.get(\"http://localhost:4000/\")\r\n        .then(res => res.status === 200 && res.data)\r\n        .then(resolve)\r\n        .catch(console.error)\r\n    })\r\n}\r\n// export function getPosts() {\r\n//     return new Promise(resolve => {\r\n//         axios.get(\"/posts\")\r\n//         .then(res => res.status === 200 && res.data)\r\n//         .then(res => res.status === 200 && res.data)\r\n//         .then(resolve)\r\n//         .catch(console.error)\r\n//     })\r\n// }\r\n\r\nexport function insertPost(body) {\r\n    return new Promise(resolve => {\r\n        axios.post(\"http://localhost:4000/insert\", body)\r\n        .then(res => res.status === 200 && res.data)\r\n        .then(resolve)\r\n        .catch(console.error)\r\n    })\r\n}\r\n// export function insertPost(body) {\r\n//     return new Promise(resolve => {\r\n//         axios.post(\"/posts/insert\", body)\r\n//         .then(res => res.status === 200 && res.data)\r\n//         .then(resolve)\r\n//         .catch(console.error)\r\n//     })\r\n// }"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAO,SAAS,CAAAC,QAAQA,CAAA,CAAG,CACvB,MAAO,IAAI,CAAAC,OAAO,CAACC,OAAO,EAAI,CAC1B;AACA;AACA;AACAH,KAAK,CAACI,GAAG,CAAC,wBAAwB,CAAC,CAClCC,IAAI,CAACC,GAAG,EAAIA,GAAG,CAACC,MAAM,GAAK,GAAG,EAAID,GAAG,CAACE,IAAI,CAAC,CAC3CH,IAAI,CAACF,OAAO,CAAC,CACbM,KAAK,CAACC,OAAO,CAACC,KAAK,CAAC,CACzB,CAAC,CAAC,CACN,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAO,SAAS,CAAAC,UAAUA,CAACC,IAAI,CAAE,CAC7B,MAAO,IAAI,CAAAX,OAAO,CAACC,OAAO,EAAI,CAC1BH,KAAK,CAACc,IAAI,CAAC,8BAA8B,CAAED,IAAI,CAAC,CAC/CR,IAAI,CAACC,GAAG,EAAIA,GAAG,CAACC,MAAM,GAAK,GAAG,EAAID,GAAG,CAACE,IAAI,CAAC,CAC3CH,IAAI,CAACF,OAAO,CAAC,CACbM,KAAK,CAACC,OAAO,CAACC,KAAK,CAAC,CACzB,CAAC,CAAC,CACN,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}